{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Task Pro",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "This is a documentation of a Task Pro app"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    },
    {
      "url": "https://taskpro-backend-y1x7.onrender.com"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Auth operations."
    },
    {
      "name": "Users",
      "description": "User profile and setings operations"
    },
    {
      "name": "Boards",
      "description": "Operations for managing boards"
    },
    {
      "name": "Columns",
      "description": "Operations for managing columns"
    },
    {
      "name": "Cards",
      "description": "Operations for managing cards"
    },
    {
      "name": "Help",
      "description": "Possibility of sending a help request to address edik.kozelsky@gmail.com"
    }
  ],
  "paths": {
    "/boards": {
      "post": {
        "tags": [
          "Boards"
        ],
        "summary": "Create a new board",
        "operationId": "createBoard",
        "description": "Create a new board",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "title"
                ],
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "Title of a new board",
                    "example": "My board"
                  },
                  "background": {
                    "type": "string",
                    "description": "A background image for a new board",
                    "enum": [
                      "default-bg-mob",
                      "bg1-2x-mob.jpg",
                      "bg2-2x-mob.jpg",
                      "bg3-2x-mob.jpg",
                      "bg4-2x-mob.jpg",
                      "bg5-2x-mob.jpg",
                      "bg6-2x-mob.jpg",
                      "bg7-2x-mob.jpg",
                      "bg8-2x-mob.jpg",
                      "bg9-2x-mob.jpg",
                      "bg10-2x-mob.jpg",
                      "bg11-2x-mob.jpg",
                      "bg12-2x-mob.jpg",
                      "bg13-2x-mob.jpg",
                      "bg14-2x-mob.jpg",
                      "bg15-2x-mob.jpg",
                      "default-bg-tab",
                      "bg1-2x-tab.jpg",
                      "bg2-2x-tab.jpg",
                      "bg3-2x-tab.jpg",
                      "bg4-2x-tab.jpg",
                      "bg5-2x-tab.jpg",
                      "bg6-2x-tab.jpg",
                      "bg7-2x-tab.jpg",
                      "bg8-2x-tab.jpg",
                      "bg9-2x-tab.jpg",
                      "bg10-2x-tab.jpg",
                      "bg11-2x-tab.jpg",
                      "bg12-2x-tab.jpg",
                      "bg13-2x-tab.jpg",
                      "bg14-2x-tab.jpg",
                      "bg15-2x-tab.jpg",
                      "default-bg-desk",
                      "bg1-2x-desk.jpg",
                      "bg2-2x-desk.jpg",
                      "bg3-2x-desk.jpg",
                      "bg4-2x-desk.jpg",
                      "bg5-2x-desk.jpg",
                      "bg6-2x-desk.jpg",
                      "bg7-2x-desk.jpg",
                      "bg8-2x-desk.jpg",
                      "bg9-2x-desk.jpg",
                      "bg10-2x-desk.jpg",
                      "bg11-2x-desk.jpg",
                      "bg12-2x-desk.jpg",
                      "bg13-2x-desk.jpg",
                      "bg14-2x-desk.jpg",
                      "bg15-2x-desk.jpg"
                    ],
                    "example": "default-bg-desk",
                    "default": "default-bg-desk"
                  },
                  "icon": {
                    "type": "string",
                    "description": "Icon image for a new board",
                    "enum": [
                      "4dot",
                      "star",
                      "circle",
                      "puzzle",
                      "cube",
                      "lightning",
                      "3-circle",
                      "octagon"
                    ],
                    "example": "4dot",
                    "default": "4dot"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully created a new board"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "title": {
                          "type": "string",
                          "description": "Title of a new board",
                          "example": "My board"
                        },
                        "background": {
                          "type": "string",
                          "example": "default-bg-desk"
                        },
                        "icon": {
                          "description": "Icon image for a new board",
                          "example": "4dot"
                        },
                        "owner": {
                          "type": "string",
                          "description": "ID of user who created the board",
                          "example": "67467d26dcac8fc709d7cd89"
                        },
                        "columns": {
                          "type": "array",
                          "description": "Array of a columns in this board. A new board can't have columns, so it's an empty array always",
                          "example": []
                        },
                        "_id": {
                          "type": "string",
                          "description": "MongoDB format ID of a new board",
                          "example": "65ca67e7ae7f10c88b598384"
                        },
                        "createdAt": {
                          "description": "Date and time when board was created",
                          "type": "string",
                          "format": "date-time",
                          "example": "2024-12-02T03:50:19.232Z"
                        },
                        "updatedAt": {
                          "description": "Date and time when board was updated last time",
                          "type": "string",
                          "format": "date-time",
                          "example": "2024-12-11T00:50:02.166Z"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/cards": {
      "post": {
        "tags": [
          "Cards"
        ],
        "summary": "Create a new card",
        "operationId": "createCard",
        "description": "Create a new card",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "title",
                  "description",
                  "priority",
                  "columnId"
                ],
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "Title of a new card",
                    "example": "Wash the dishes"
                  },
                  "descriptio": {
                    "type": "string",
                    "description": "Shortly about what to do",
                    "example": "Wash and dry all dishes in a sink"
                  },
                  "priority": {
                    "type": "string",
                    "description": "How fast to do this task",
                    "example": "medium",
                    "default": "without"
                  },
                  "columnId": {
                    "type": "string",
                    "description": "Column ID MongoDB format of a column this card belongs to",
                    "example": "65ca67e7ae7f10c88b598384"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully created a new card"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "title": {
                          "type": "string",
                          "example": "Wash the dishes"
                        },
                        "description": {
                          "type": "string",
                          "example": "Shortly about what to do"
                        },
                        "priority": {
                          "type": "string",
                          "description": "How fast this task need to be done",
                          "example": "high",
                          "default": "without"
                        },
                        "date": {
                          "type": "string",
                          "description": "Date due for this task",
                          "format": "date",
                          "example": "12/13/2024",
                          "default": null
                        },
                        "board": {
                          "type": "string",
                          "description": "MongoDB format ID of board this card created at",
                          "example": "65ca67e7ae7f10c88b598384"
                        },
                        "column": {
                          "type": "string",
                          "description": "MongoDB format ID of column this card belong to",
                          "example": "65ca67e7ae7f10c88b598384"
                        },
                        "_id": {
                          "type": "string",
                          "description": "MongoDB format ID of a new card",
                          "example": "65ca67e7ae7f10c88b598384"
                        },
                        "createdAt": {
                          "description": "Date and time when card was created",
                          "type": "string",
                          "format": "date-time",
                          "example": "2024-12-02T03:50:19.232Z"
                        },
                        "updatedAt": {
                          "description": "Date and time when card was updated last time",
                          "type": "string",
                          "format": "date-time",
                          "example": "2024-12-11T00:50:02.166Z"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "get": {
        "tags": [
          "Cards"
        ],
        "summary": "Get all cards",
        "operationId": "getAllCards",
        "description": "Get all cards",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "cards"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found all cards"
                    },
                    "cards": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/card"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404_card"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/cards/{id}": {
      "get": {
        "tags": [
          "Cards"
        ],
        "summary": "Get cartd by id",
        "operationId": "getCard",
        "description": "Get card by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "MongoBD ID format",
              "example": "65ca67e7ae7f10c88b598384"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "card"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found card with id 65ca67e7ae7f10c88b598384!"
                    },
                    "card": {
                      "type": "object",
                      "$ref": "#/components/schemas/card"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404_card"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "patch": {
        "tags": [
          "Cards"
        ],
        "summary": "Update a card",
        "operationId": "updateCard",
        "description": "Update a card",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Card's id MongoDB format",
              "example": "65ca67e7ae7f10c88b598384"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "New title of a card",
                    "example": "Wash the dishes"
                  },
                  "descriptio": {
                    "type": "string",
                    "description": "New description of a card",
                    "example": "Wash and dry all dishes in a sink"
                  },
                  "priority": {
                    "type": "string",
                    "description": "New priority level of a card",
                    "example": "medium",
                    "default": "without"
                  },
                  "columnId": {
                    "type": "string",
                    "description": "New column ID MongoDB format of a column this card transferred to",
                    "example": "65ca67e7ae7f10c88b598384"
                  },
                  "date": {
                    "type": "string",
                    "format": "date",
                    "description": "New deadline date for a card",
                    "example": "12/15/2024"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully updated a card"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "title": {
                          "type": "string",
                          "example": "Wash the dishes"
                        },
                        "description": {
                          "type": "string",
                          "example": "Shortly about what to do"
                        },
                        "priority": {
                          "type": "string",
                          "description": "How fast this task need to be done",
                          "example": "high",
                          "default": "without"
                        },
                        "date": {
                          "type": "string",
                          "description": "Date due for this task",
                          "format": "date",
                          "example": "12/13/2024",
                          "default": null
                        },
                        "board": {
                          "type": "string",
                          "description": "MongoDB format ID of board this card created at",
                          "example": "65ca67e7ae7f10c88b598384"
                        },
                        "column": {
                          "type": "string",
                          "description": "MongoDB format ID of column this card belong to",
                          "example": "65ca67e7ae7f10c88b598384"
                        },
                        "_id": {
                          "type": "string",
                          "description": "MongoDB format ID of a new card",
                          "example": "65ca67e7ae7f10c88b598384"
                        },
                        "createdAt": {
                          "description": "Date and time when card was created",
                          "type": "string",
                          "format": "date-time",
                          "example": "2024-12-02T03:50:19.232Z"
                        },
                        "updatedAt": {
                          "description": "Date and time when card was updated last time",
                          "type": "string",
                          "format": "date-time",
                          "example": "2024-12-11T00:50:02.166Z"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404_card"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "delete": {
        "tags": [
          "Cards"
        ],
        "summary": "Delete card by ID",
        "operationId": "deleteCard",
        "description": "Deleting card by ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "MongoDB ID format",
              "example": "65ca67e7ae7f10c88b598384"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404_card"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/columns": {
      "post": {
        "tags": [
          "Columns"
        ],
        "summary": "Create a new column",
        "operationId": "createColumn",
        "description": "Create a new column",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "title",
                  "boardId"
                ],
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "Title of a new column",
                    "example": "Study tasks"
                  },
                  "boardId": {
                    "type": "string",
                    "description": "Board ID MongoDB format of a board this column belongs to",
                    "example": "65ca67e7ae7f10c88b598384"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully created a new column"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "title": {
                          "type": "string",
                          "example": "Study tasks"
                        },
                        "board": {
                          "type": "string",
                          "description": "MongoDB format ID of board this card created at",
                          "example": "65ca67e7ae7f10c88b598384"
                        },
                        "cards": {
                          "type": "string",
                          "example": [],
                          "description": "New column can't have cards inside, so it's always an empty array"
                        },
                        "_id": {
                          "type": "string",
                          "description": "MongoDB format ID of a new card",
                          "example": "65ca67e7ae7f10c88b598384"
                        },
                        "createdAt": {
                          "description": "Date and time when card was created",
                          "type": "string",
                          "format": "date-time",
                          "example": "2024-12-02T03:50:19.232Z"
                        },
                        "updatedAt": {
                          "description": "Date and time when card was updated last time",
                          "type": "string",
                          "format": "date-time",
                          "example": "2024-12-11T00:50:02.166Z"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "get": {
        "tags": [
          "Columns"
        ],
        "summary": "Get all columns",
        "operationId": "getAllColumns",
        "description": "Get all columns",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found all columns"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/column"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404_column"
          }
        }
      }
    },
    "/columns/{id}": {
      "get": {
        "tags": [
          "Columns"
        ],
        "summary": "Get column by id",
        "operationId": "getColumn",
        "description": "Get column by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "MongoBD ID format",
              "example": "65ca67e7ae7f10c88b598384"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "column"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found column with id 65ca67e7ae7f10c88b598384!"
                    },
                    "column": {
                      "type": "object",
                      "$ref": "#/components/schemas/column"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404_column"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "patch": {
        "tags": [
          "Columns"
        ],
        "summary": "Update a column",
        "operationId": "updateColumn",
        "description": "Update a cacolumnrd",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Column's id MongoDB format",
              "example": "65ca67e7ae7f10c88b598384"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "New title of a column",
                    "example": "Home tasks"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully updated column with id 65ca67e7ae7f10c88b598384"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "description": "MongoDB format ID of a column",
                          "example": "65ca67e7ae7f10c88b598384"
                        },
                        "title": {
                          "type": "string",
                          "example": "Home tasks"
                        },
                        "board": {
                          "type": "string",
                          "description": "MongoDB format ID of board this card created at",
                          "example": "65ca67e7ae7f10c88b598384"
                        },
                        "cards": {
                          "type": "array",
                          "example": [
                            "674d2e7bcad701f411d7fb66"
                          ]
                        },
                        "createdAt": {
                          "description": "Date and time when card was created",
                          "type": "string",
                          "format": "date-time",
                          "example": "2024-12-02T03:50:19.232Z"
                        },
                        "updatedAt": {
                          "description": "Date and time when card was updated last time",
                          "type": "string",
                          "format": "date-time",
                          "example": "2024-12-11T00:50:02.166Z"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404_column"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "delete": {
        "tags": [
          "Columns"
        ],
        "summary": "Delete column by ID",
        "operationId": "deleteColumn",
        "description": "Deleting column by ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "MongoDB ID format",
              "example": "65ca67e7ae7f10c88b598384"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404_column"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "responses": {
      "400": {
        "description": "Conflict error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "error"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 400
                },
                "message": {
                  "type": "string",
                  "example": "ConflictError"
                },
                "error": {
                  "type": "string",
                  "example": "Invalid password or email"
                }
              }
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "error"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "UnauthorizedError"
                },
                "error": {
                  "type": "string",
                  "example": "Auth token is expired"
                }
              }
            }
          }
        }
      },
      "500": {
        "description": "Internal Server Error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 500
                },
                "message": {
                  "type": "string",
                  "example": "Internal Server Error"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal Server Error. Please try again later"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "404_card": {
        "description": "Card not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "Card not found"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Card not found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "404_column": {
        "description": "Column not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "Column not found"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Column not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "schemas": {
      "board": {
        "type": "object",
        "required": [
          "title"
        ],
        "properties": {
          "_id": {
            "description": "Board's ID MongoDB format",
            "type": "string",
            "example": "674d2cf2d0824f62a4f3f9d3"
          },
          "title": {
            "description": "Board's title",
            "type": "string",
            "example": "Home tasks"
          },
          "background": {
            "description": "Background image for the board",
            "type": "string",
            "enum": [
              "default-bg-mob",
              "bg1-2x-mob.jpg",
              "bg2-2x-mob.jpg",
              "bg3-2x-mob.jpg",
              "bg4-2x-mob.jpg",
              "bg5-2x-mob.jpg",
              "bg6-2x-mob.jpg",
              "bg7-2x-mob.jpg",
              "bg8-2x-mob.jpg",
              "bg9-2x-mob.jpg",
              "bg10-2x-mob.jpg",
              "bg11-2x-mob.jpg",
              "bg12-2x-mob.jpg",
              "bg13-2x-mob.jpg",
              "bg14-2x-mob.jpg",
              "bg15-2x-mob.jpg",
              "default-bg-tab",
              "bg1-2x-tab.jpg",
              "bg2-2x-tab.jpg",
              "bg3-2x-tab.jpg",
              "bg4-2x-tab.jpg",
              "bg5-2x-tab.jpg",
              "bg6-2x-tab.jpg",
              "bg7-2x-tab.jpg",
              "bg8-2x-tab.jpg",
              "bg9-2x-tab.jpg",
              "bg10-2x-tab.jpg",
              "bg11-2x-tab.jpg",
              "bg12-2x-tab.jpg",
              "bg13-2x-tab.jpg",
              "bg14-2x-tab.jpg",
              "bg15-2x-tab.jpg",
              "default-bg-desk",
              "bg1-2x-desk.jpg",
              "bg2-2x-desk.jpg",
              "bg3-2x-desk.jpg",
              "bg4-2x-desk.jpg",
              "bg5-2x-desk.jpg",
              "bg6-2x-desk.jpg",
              "bg7-2x-desk.jpg",
              "bg8-2x-desk.jpg",
              "bg9-2x-desk.jpg",
              "bg10-2x-desk.jpg",
              "bg11-2x-desk.jpg",
              "bg12-2x-desk.jpg",
              "bg13-2x-desk.jpg",
              "bg14-2x-desk.jpg",
              "bg15-2x-desk.jpg"
            ],
            "example": "default-bg-desk",
            "default": "default-bg-desk"
          },
          "icon": {
            "description": "Icon for the board",
            "type": "string",
            "enum": [
              "4dot",
              "star",
              "circle",
              "puzzle",
              "cube",
              "lightning",
              "3-circle",
              "octagon"
            ],
            "example": "4dot",
            "default": "4dot"
          },
          "owner": {
            "description": "ID of user who created the board",
            "type": "string",
            "example": "67467d26dcac8fc709d7cd89"
          },
          "columns": {
            "description": "List of columns of this board",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/column"
            }
          },
          "createdAt": {
            "description": "Date and time when board was created",
            "type": "string",
            "format": "date-time",
            "example": "2024-12-02T03:50:19.232Z"
          },
          "updatedAt": {
            "description": "Date and time when board was updated last time",
            "type": "string",
            "format": "date-time",
            "example": "2024-12-11T00:50:02.166Z"
          }
        }
      },
      "card": {
        "type": "object",
        "required": [
          "title",
          "description",
          "priority",
          "date"
        ],
        "properties": {
          "date": {
            "description": "Deadline for the task",
            "type": "string",
            "format": "date",
            "example": "12/13/2024",
            "default": null
          },
          "_id": {
            "description": "Card's id MongoDB format",
            "type": "string",
            "example": "65ca67e7ae7f10c88b598384"
          },
          "title": {
            "description": "Card's title",
            "type": "string",
            "example": "Clean up the house"
          },
          "description": {
            "description": "Shortly about the task",
            "type": "string",
            "example": "What do I need to do to clean up the house"
          },
          "priority": {
            "description": "How fast this task need to be done",
            "type": "string",
            "enum": [
              "without",
              "low",
              "medium",
              "high"
            ],
            "example": "low",
            "default": "without"
          },
          "board": {
            "description": "Board this card belong to",
            "type": "object",
            "$ref": "#/components/schemas/board"
          },
          "column": {
            "description": "ID of column this card belongs to",
            "type": "string",
            "example": "674d2dc8cd2bd097bcdf503e"
          },
          "createdAt": {
            "description": "Date and time when card was created",
            "type": "string",
            "format": "date-time",
            "example": "2024-12-02T03:50:19.232Z"
          },
          "updatedAt": {
            "description": "Date and time when card was updated last time",
            "type": "string",
            "format": "date-time",
            "example": "2024-12-11T00:50:02.166Z"
          }
        }
      },
      "column": {
        "type": "object",
        "required": [
          "title"
        ],
        "properties": {
          "_id": {
            "description": "Column's ID MongoDB format",
            "type": "string",
            "example": "674d2dc8cd2bd097bcdf503e"
          },
          "title": {
            "description": "Column's title",
            "type": "string",
            "example": "In progress"
          },
          "board": {
            "description": "Board this column belongs to",
            "type": "object",
            "$ref": "#/components/schemas/board"
          },
          "cards": {
            "description": "List of cards from this column",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/card"
            }
          },
          "createdAt": {
            "description": "Date and time when column was created",
            "type": "string",
            "format": "date-time",
            "example": "2024-12-02T03:50:19.232Z"
          },
          "updatedAt": {
            "description": "Date and time when column was updated last time",
            "type": "string",
            "format": "date-time",
            "example": "2024-12-11T00:50:02.166Z"
          }
        }
      }
    }
  }
}